"""
Django settings for gt project.

Generated by 'django-admin startproject' using Django 4.0.3.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""

from pathlib import Path
import os

QAGT_SERVER = os.environ.get('GTSERVER', "DEVELOPMENT")
QAGT_POSTGRESQL = {
    "HOST": os.environ.get('GTPOSTGRESQLHOST',
                           "yxzlownserveraddress.yxzl.top"),
    "PORT": os.environ.get('GTPOSTGRESQLPORT', "5432"),
    "USER": os.environ.get('GTPOSTGRESQLUSER', "yxzl"),
    "PASSWORD": os.environ.get('GTPOSTGRESQLPASSWORD', "@yixiangzhilv"),
}
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-kg%gl=qy7_^)@ikljm-jvl9r$&3d%^2i$uewj8#t^sq%&7(mxf'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    "gt_user",
]

MIDDLEWARE = [
    'gt.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'gt.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'gt.wsgi.application'

# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

if QAGT_SERVER.startswith("DEVELOPMENT"):
    QAGT_SERVER = "DEVELOPMENT"
    print("-----GT_SERVER is DEVELOPMENT-----")
    DEBUG = True
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql',
            'NAME': 'gttest',
            'USER': QAGT_POSTGRESQL["USER"],
            'PASSWORD': QAGT_POSTGRESQL['PASSWORD'],
            'HOST': QAGT_POSTGRESQL["HOST"],
            'PORT': QAGT_POSTGRESQL["PORT"],
        },
    }
else:
    QAGT_SERVER = "PRODUCTION"
    print("-----GT_SERVER is PRODUCTION-----")
    DEBUG = False
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql',
            'NAME': 'gt',
            'USER': QAGT_POSTGRESQL["USER"],
            'PASSWORD': QAGT_POSTGRESQL['PASSWORD'],
            'HOST': QAGT_POSTGRESQL["HOST"],
            'PORT': QAGT_POSTGRESQL["PORT"],
        },
    }

# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME':
        'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME':
        'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME':
        'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME':
        'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'gt.authentications.GtAuthentication',
    ],
    # 'DEFAULT_PERMISSION_CLASSES': [
    #     'rest_framework.permissions.IsAdminUser',
    # ],
    'DEFAULT_PAGINATION_CLASS':
    'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 15
}

AUTH_USER_MODEL = 'gt_user.User'

# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_URL = 'static/'

STATIC_ROOT = os.path.join(BASE_DIR, 'static_root')

STATICFILES_DIRS = [
    BASE_DIR / "static",
]

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
